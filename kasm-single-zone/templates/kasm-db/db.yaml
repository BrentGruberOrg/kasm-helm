apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.kasmApp.servicesToDeploy.db.name }}-deployment
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.db.name }}
    {{- include "kasm.defaultLabels" . | indent 4 }}
spec:
  replicas: 1
  serviceName: db
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.db.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.db.name }}
        {{- include "kasm.defaultLabels" . | indent 8 }}
    spec:
      restartPolicy: {{ .Values.image.restartPolicy }}
      {{- if .Values.image.pullSecrets }}
        {{- include "image.pullSecrets" . | indent 6 }}
      {{- end }}
      {{- if .Values.kasmApp.applyHardening }}
        {{include "db.podSecurity" . | indent 6 }}
      {{- end }}
      {{- if .Values.kasmApp.applyHardening }}
        {{- include "db.podSecurity.initContainer" . | indent 6 }}
        {{- include "db.podSecurity.mounts" . | indent 12 }}
      {{- end }}
      containers:
        - name: {{ .Values.kasmApp.servicesToDeploy.db.name }}-container
          image: "{{ .Values.kasmApp.servicesToDeploy.db.image }}:{{ .Values.kasmApp.servicesToDeploy.db.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: kasm
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.kasmApp.name | default "kasm" }}-secrets
                  key: db-password
            - name: POSTGRES_USER
              value: kasmapp
          resources:
            requests:
              memory: "300Mi"
              cpu: 1
          ports:
            - name: {{ .Values.kasmApp.servicesToDeploy.db.name }}-port
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - pg_isready
                - --port=5432
            timeoutSeconds: 10
            initialDelaySeconds: 15
            periodSeconds: 30
            failureThreshold: 5
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  psql -d kasm -U kasmapp -c 'SELECT 1' || exit 1
            timeoutSeconds: 10
            initialDelaySeconds: 20
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "db.containerSecurity" . | indent 10 }}
          {{- end }}
          volumeMounts:
          - name: kasm-db-data
            mountPath: /var/lib/postgresql/data
            subPath: postgres
          - name: kasm-db-configs
            mountPath: /docker-entrypoint-initdb.d/data.sql
            subPath: data.sql
          - name: kasm-db-configs
            mountPath: /var/lib/postgresql/conf/postgresql.conf
            subPath: postgresql.conf
          - name: kasm-db-configs
            mountPath: /var/lib/postgresql/conf/pg_hba.conf
            subPath: pg_hba.conf
          - name: kasm-db-cert
            mountPath: /etc/ssl/certs/db_server.crt
            subPath: tls.crt
          - name: kasm-db-cert
            mountPath: /etc/ssl/certs/db_server.key
            subPath: tls.key
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "db.podSecurity.mounts" . | indent 10 }}
          {{- end }}
      volumes:
        - name: kasm-db-configs
          configMap:
            name: {{ .Values.kasmApp.servicesToDeploy.db.name }}-configmap
            defaultMode: 0644
        - name: kasm-db-cert
          secret:
            secretName: {{ .Values.kasmCerts.db.name }}
            defaultMode: 0600
  {{- if .Values.kasmApp.servicesToDeploy.db.persistentVolumeClaimRetentionPolicy.enabled }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .Values.kasmApp.servicesToDeploy.db.persistentVolumeClaimRetentionPolicy.whenDeleted }}
    whenScaled: {{ .Values.kasmApp.servicesToDeploy.db.persistentVolumeClaimRetentionPolicy.whenScaled }}
  {{- end }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: kasm-db-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
{{ include "kasm.serviceTemplate" (list . "db" .Values.kasmApp.servicesToDeploy.db.name (list 5432) ) }}
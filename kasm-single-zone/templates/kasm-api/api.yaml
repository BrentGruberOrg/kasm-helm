apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}-pod
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}
    {{- include "kasm.defaultLabels" . | indent 4 }}
spec:
  replicas: {{ .Values.kasmApp.servicesToDeploy.kasmApi.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: {{ add1 .Values.kasmApp.servicesToDeploy.kasmApi.replicas }}
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}
        {{- include "kasm.defaultLabels" . | indent 8 }}
    spec:
      restartPolicy: {{ .Values.image.restartPolicy }}
      {{- if .Values.image.pullSecrets }}
        {{- include "image.pullSecrets" . | indent 6 }}
      {{- end }}
      {{- if .Values.kasmApp.applyHardening }}
        {{- include "kasm.podSecurity" . | indent 6 }}
      {{- end }}
      initContainers:
        - name: db-is-ready
          image: "{{ .Values.kasmApp.servicesToDeploy.kasmApi.image }}:{{ .Values.kasmApp.servicesToDeploy.kasmApi.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_AUTO_INITIALIZE
              value: "false"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.kasmApp.name | default "kasm" }}-secrets
                  key: db-password
            - name: START_SERVICES
              value: "false"
          command:
            - /bin/bash
            - -c
          args:
            - |
              while [ ! $(PGPASSWORD=$POSTGRES_PASSWORD psql -U kasmapp -d kasm -h db -t -c "select zone_id from zones" 2>/dev/null | wc -l) -ge 2 ]; do echo "Waiting for DB to initialize..."; sleep 5; done
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
      containers:
        - name: {{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}-container
          image: "{{ .Values.kasmApp.servicesToDeploy.kasmApi.image }}:{{ .Values.kasmApp.servicesToDeploy.kasmApi.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_AUTO_INITIALIZE
              value: "false"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.kasmApp.name | default "kasm" }}-secrets
                  key: db-password
          resources:
            requests:
              memory: "250Mi"
              cpu: "200m"
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: kasm-api
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}-svc
    {{- include "kasm.defaultLabels" . | indent 4 }}
spec:
  selector:
    app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}
  ports:
    - name: "{{ .Values.kasmApp.servicesToDeploy.kasmApi.name }}-8080"
      protocol: TCP
      port: 8080
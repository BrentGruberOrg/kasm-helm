apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kasmApp.name | default "kasm" }}-manager
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    kasm_app: {{ .Values.kasmApp.name | default "kasm" }}-manager
{{- include "kasm.defaultLabels" . | indent 4 }}
spec:
  replicas: {{ .Values.kasmApp.managerReplicas }}
  selector:
    matchLabels:
      kasm_app: {{ .Values.kasmApp.name | default "kasm" }}-manager
  strategy: {}
  template:
    metadata:
      labels:
        kasm_app: {{ .Values.kasmApp.name | default "kasm" }}-manager
{{- include "kasm.defaultLabels" . | indent 8 }}
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
{{- end }}
      initContainers:
        - name: api-is-ready
          image: kasmweb/manager-private:feature_KASM-5313_webui_code_move
          imagePullPolicy: {{ .Values.imagePullSecrets }}
          command:
            - "/bin/bash"
            - "-c"
          args:
            - |
              while ! curl http://kasm-api:8080/api/__healthcheck 2>/dev/null | grep -q true; do echo "Waiting for the API server to start..."; sleep 5; done
      containers:
        - name: {{ .Values.kasmApp.name | default "kasm" }}-manager
          image: kasmweb/manager-private:feature_KASM-5313_webui_code_move
          imagePullPolicy: {{ .Values.imagePullSecrets }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.kasmApp.name | default "kasm" }}-secrets
                  key: db-password
          resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kasm-manager
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
{{- include "kasm.defaultLabels" . | indent 4 }}
spec:
  selector:
    kasm_app: {{ .Values.kasmApp.name | default "kasm" }}-manager
  ports:
  - name: kasm-manager
    protocol: TCP
    port: 8181